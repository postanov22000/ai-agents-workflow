name: Email & Autopilot Scheduler

on:
  schedule:
    - cron: '*/5 * * * *'     # Every 5 minutes
    - cron: '0 2 * * *'       # Daily at 2:00 AM UTC
  workflow_dispatch:
  repository_dispatch:
    types: [autopilot-trigger]

permissions:
  contents: read

jobs:
  poll-gmail:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - run: |
          pip install -r requirements.txt
          python poll_gmail.py
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}

  trigger-processing:
    needs: poll-gmail
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - run: |
          HTTP=$(curl -s -o /dev/null -w "%{http_code}" \
            "https://replyzeai.onrender.com/process?token=${{ secrets.PROCESS_SECRET_TOKEN }}")
          echo "HTTP Status: $HTTP"
          test "$HTTP" = "200" || test "$HTTP" = "204"

  run-autopilot-batch:
    needs: trigger-processing
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - run: |
          HTTP=$(curl -s -o /dev/null -w "%{http_code}" \
            -X POST "https://replyzeai.onrender.com/autopilot/batch")
          echo "Batch status: $HTTP"
          test "$HTTP" = "200"

  run-dispatched-autopilot:
    if: github.event_name == 'repository_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - run: |
          pip install -r requirements.txt
          echo '${{ toJson(github.event.client_payload) }}' > payload.json
          python transaction_autopilot_task.py payload.json
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
